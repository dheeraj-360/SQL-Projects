CREATE TABLE country (
country_id INT PRIMARY KEY,
country_name VARCHAR(50),
head_office VARCHAR(50)
);
--------------------
INSERT INTO country (country_id, country_name, head_office)
VALUES (1, 'UK', 'London'),
(2, 'USA', 'New York'),
(3, 'China', 'Beijing');
--------------------
CREATE TABLE customers (
customer_id INT PRIMARY KEY,
first_shop DATE,
age INT,
rewards VARCHAR(50),
can_email VARCHAR(50)
);
--------------------
INSERT INTO customers (customer_id, first_shop, age, rewards, can_email)
VALUES (1, '2022-03-20', 23, 'yes', 'no'),
(2, '2022-03-25', 26, 'no', 'no'),
(3, '2022-04-06', 32, 'no', 'no'),
(4, '2022-04-13', 25, 'yes', 'yes'),
(5, '2022-04-22', 49, 'yes', 'yes'),
(6, '2022-06-18', 28, 'yes', 'no'),
(7, '2022-06-30', 36, 'no', 'no'),
(8, '2022-07-04', 37, 'yes', 'yes');
--------------------
CREATE TABLE orders (
order_id INT PRIMARY KEY,
customer_id INT,
date_shop DATE,
sales_channel VARCHAR(50),
country_id INT,
FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
FOREIGN KEY (country_id) REFERENCES country(country_id)
);
--------------------
INSERT INTO orders (order_id, customer_id, date_shop, sales_channel, country_id)
VALUES (1, 1, '2023-01-16', 'retail', 1),
(2, 4, '2023-01-20', 'retail', 1),
(3, 2, '2023-01-25', 'retail', 2),
(4, 3, '2023-01-25', 'online', 1),
(5, 1, '2023-01-28', 'retail', 3),
(6, 5, '2023-02-02', 'online', 1),
(7, 6, '2023-02-05', 'retail', 1),
(8, 3, '2023-02-11', 'online', 3);
--------------------
CREATE TABLE products_2 (
product_id INT PRIMARY KEY,
category VARCHAR(50),
price NUMERIC(5,2)
);
--------------------
INSERT INTO products_2 (product_id, category, price)
VALUES (1, 'food', 5.99),
(2, 'sports', 12.49),
(3, 'vitamins', 6.99),
(4, 'food', 0.89),
(5, 'vitamins', 15.99);
--------------------
CREATE TABLE baskets (
order_id INT,
product_id INT,
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (product_id) REFERENCES products_2(product_id)
);
--------------------
INSERT INTO baskets (order_id, product_id)
VALUES (1, 1),
(1, 2),
(1, 5),
(2, 4),
(3, 3),
(4, 2),
(4, 1),
(5, 3),
(5, 5),
(6, 4),
(6, 3),
(6, 1),
(7, 2),
(7, 1),
(8, 3),
(8, 3);

select * from country;
select * from customers;
select * from orders;
select * from baskets;
select * from products_2


--1. What are the names of all the countries in the country table?

select country_name from country

--2. What is the total number of customers in the customers table?
select count(customer_id) from customers

--3. What is the average age of customers who can receive marketing emails (can_email is set to 'yes')?

select avg(age) as avg_age from customers 

where can_email='yes';

--4. How many orders were made by customers aged 30 or older?

select count(order_id) as no_of_customers from customers c inner join orders o
ON c.customer_id=o.customer_id
where age >=30;


select c.customer_id
from customers c left join orders o ON c.customer_id =o.customer_id
where o.order_id is NULL

select customer_id from customers where customer_id NOT IN(
select customer_id from orders)

select customer_id from customers
EXCEPT
select customer_id from orders


select * from customers;
select * from orders;

--5. What is the total revenue generated by each product category?
select category,sum(price) from products_2
group by category






--6. What is the average price of products in the 'food' category?
select * from products_2

select category, AVG(price) as avg_price from products_2
group by category having category='food'




--7. How many orders were made in each sales channel (sales_channel column) in the orders table?

select * from orders

select count(order_id),sales_channel from orders
group by sales_channel


--8.What is the date of the latest order made by a customer who can receive marketing emails?

select * from customers;
select * from orders;

select max(o.date_shop)
from customers c inner join orders o ON c.customer_id=o.customer_id
where can_email='yes'

select country_name, max(count(order_id)) over(order by country_name rows between  unbounded preceding and current row ) as no_of_orders
from orders o inner join country c On o.country_id=c.country_id 
group by country_name;



--9. What is the name of the country with the highest number of orders?
with cte_t1 as (select country_name, COUNT(order_id) as number_of_orders
from orders o inner join country c On o.country_id=c.country_id
group by country_name) 

select  country_name  from cte_t1 where number_of_orders = (select max(number_of_orders) from cte_t1)


select * from (select country_name, COUNT(order_id) as number_of_orders
from orders o inner join country c On o.country_id=c.country_id
group by country_name) b where b.number_of_orders = (select max(number_of_orders) from b)
 


 select country_name, COUNT(order_id) as number_of_orders
from orders o inner join country c On o.country_id=c.country_id 
group by country_name HAVING count(order_id) in ( select distinct max(count(order_id)) over()  from orders o inner join country c On o.country_id=c.country_id 
group by country_name)

select distinct max(count(order_id) ) OVER() from orders o inner join country c On o.country_id=c.country_id 
group by country_name 


select country_name,count(order_id) from orders o inner join country c On o.country_id=c.country_id 
group by country_name


--10. What is the average age of customers who made orders in the 'vitamins' product category?

select * from customers;
select * from products_2;



select * from baskets;
select * from orders;


select avg(c.age) as avg_age
from customers c inner join orders o ON c.customer_id= o.customer_id
inner join baskets b on b.order_id = o.order_id 
inner join products_2 p on b.product_id=p.product_id
where category= 'vitamins'


select category,avg(c.age) as avg_age
from customers c inner join orders o ON c.customer_id= o.customer_id
inner join baskets b on b.order_id = o.order_id 
inner join products_2 p on b.product_id=p.product_id
group by category



--4. How many orders were made by customers aged 30 or older?

select * from customers;
select * from orders;

select count(o.order_id) as ct
from 
customers c INNER JOIN orders o ON c.customer_id = o.customer_id
where c.age>=30


with cte_age as (
select * from customers where age >=30)

select count(o.order_id) as orders from cte_age ca inner join orders o ON ca.customer_id = o.customer_id


select * from customers c
INNER JOIN orders o ON c.customer_id = o.customer_id


select c.customer_id from customers c
LEFT JOIN orders o ON c.customer_id = o.customer_id
where o.order_id is NULL


select customer_id from customers where customer_id not in ( select customer_id from orders)


-- 8.What is the date of the latest order made by a customer who can receive marketing emails?

select * from customers;
select * from orders;


select max(o.date_shop)
from customers c INNER JOIN orders o
ON c.customer_id = o.customer_id
where c.can_email = 'yes'

--9. What is the name of the country with the highest number of orders?

select * from orders;
select * from country;

with cte_orders as (
select c.country_name, count(o.order_id) as no_of_orders
from orders o INNER JOIN country c ON o.country_id = c.country_id
group by c.country_name)

select country_name, max(no_of_orders) as mx from cte_orders
group by country_name


select c.country_name
from orders o INNER JOIN country c ON
o.country_id = c.country_id
where ;

with cte_orders as(
select c.country_name, count(o.order_id) as no_of_orders
from orders o INNER JOIN country c ON o.country_id = c.country_id
group by c.country_name)

,cte_rnk as (select *, DENSE_RANK() over(order by no_of_orders desc) as rnk from cte_orders)

select * from cte_rnk where rnk = 1